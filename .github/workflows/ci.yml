name: CI - test, build, release

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write  # needed for releases

env:
  APP_NAME: "Asante Typing"
  APP_ID: "com.asante.typing"  # change if you have a bundle id
  APP_VERSION: "${{ github.run_number }}"  # simple rolling version
  RELEASE_TAG: "continuous"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - run: flutter --version
      - run: flutter pub get
      - run: flutter test

  linux:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - name: Install Linux desktop deps
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - run: flutter config --enable-linux-desktop
      - run: flutter pub get
      - run: flutter build linux --release
      - name: Package .deb
        run: bash scripts/package_deb.sh "$APP_VERSION"
      - name: Tar bundle
        run: |
          mkdir -p dist/linux
          tar -C build/linux/x64/release -czf dist/linux/asante-typing-linux-x64-bundle.tar.gz bundle
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            dist/linux/*.deb
            dist/linux/*.tar.gz

  windows:
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter build windows --release
      - name: Install Inno Setup
        run: choco install innosetup -y
      - name: Build installer (.exe)
        run: |
          iscc /DAppVersion=%APP_VERSION% installer/windows/AsanteTyping.iss
        shell: cmd
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: dist/windows/*.exe

  macos:
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter build macos --release
      - name: Brew create-dmg
        run: brew install create-dmg
      - name: Package .dmg
        run: bash scripts/package_dmg.sh "$APP_VERSION"
      - name: Zip .app (alt format)
        run: |
          mkdir -p dist/macos
          ditto -c -k --keepParent "build/macos/Build/Products/Release/${{ env.APP_NAME }}.app" "dist/macos/asante-typing-macos-${{ env.APP_VERSION }}.zip"
      - uses: actions/upload-artifact@v4
        with:
          name: macos
          path: |
            dist/macos/*.dmg
            dist/macos/*.zip

  android:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          android: true
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - run: flutter pub get

      # Optional signing (set these repo secrets to enable)
      - name: Setup Android keystore (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "${ANDROID_KEYSTORE_BASE64}" | base64 -d > android/keystore.jks
          {
            echo "storeFile=keystore.jks"
            echo "storePassword=${ANDROID_KEYSTORE_PASSWORD}"
            echo "keyAlias=${ANDROID_KEY_ALIAS}"
            echo "keyPassword=${ANDROID_KEY_PASSWORD}"
          } >> android/key.properties
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Build APK (release)
        run: flutter build apk --release
      - name: Build App Bundle (release)
        run: flutter build appbundle --release
      - uses: actions/upload-artifact@v4
        with:
          name: android
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  release:
    needs: [linux, windows, macos, android]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: List files going to release
        run: find dist -type f -maxdepth 3 -print
      - name: Publish/Update "continuous" release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.RELEASE_TAG }}"
          prerelease: true
          title: "Continuous build"
          files: |
            dist/**/*
